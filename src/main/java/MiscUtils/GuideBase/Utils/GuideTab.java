package MiscUtils.GuideBase.Utils;

import MiscUtils.Utils.StackUtils;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemStack;
import net.minecraft.util.StringTranslate;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

public class GuideTab {


    public HashMap<String, String> InfoStorage = new HashMap<String, String>();

    public GuideTab(GuideInstance gd, Object stack, String Name){
        instance = gd;
        this.stack = StackUtils.GetObject(stack);
        this.Name = Name;
    }

    public ItemStack stack = null;
    public String Name;
    public GuideInstance instance = null;
    public ArrayList list = new ArrayList();

    public void Register(Object r){
        ItemStack stack = StackUtils.GetObject(r);
        list.add(stack);

    }

    //TODO Maybe change to language specific version? (blockinfo_en_US.txt)? Get language code then access file.

    public void InitiateInfo(Object r){
        ItemStack stack = StackUtils.GetObject(r);

        if(r == null || stack == null || stack.getItem() == null)
            return;

        String returnString = null;
        String MissingParameter = "Missing parameter";

            boolean Item = !(stack.getItem() instanceof ItemBlock);
            GameRegistry.UniqueIdentifier id = StackUtils.getIdentifier(stack);

            if(id != null) {
                File fe = null;

            try {
                fe = new File(StringTranslate.class.getResource("/assets/" + (!Item ? instance.BlockDescriptions().getResourceDomain() : instance.ItemDescriptions().getResourceDomain()) + "/" + (!Item ? instance.BlockDescriptions().getResourcePath() : instance.ItemDescriptions().getResourcePath())).toURI().getPath());

               if(!fe.exists())
                   return;


                InputStream inputstream = new FileInputStream(fe);

                if(inputstream != null) {
                    Properties prop = new Properties();
                    prop.load(inputstream);

                    String key =  (!Item ? "block.info." : "item.info.") + stack.getUnlocalizedName().toLowerCase().replace(" ", "_").replace("tile.", "").replace("item.", "");

                    String emptyReturnString = null;

                    if(Item) {
                        emptyReturnString = "No info found for item! Check iteminfo file! file path: " + "\n" + "/assets/" + instance.ItemDescriptions().getResourceDomain() + "/" + instance.ItemDescriptions().getResourcePath() + "\nitem key: " + key;
                    }else {
                        emptyReturnString =  "No info found for block! Check blockinfo file! file path: " + "\n" + "/assets/" + instance.BlockDescriptions().getResourceDomain() + "/" + instance.BlockDescriptions().getResourcePath() + "\nblock key: " + key;
                    }

                    returnString = prop.getProperty(key, emptyReturnString);

                    if (returnString.equalsIgnoreCase(emptyReturnString)){
                        OutputStream outputStream = new FileOutputStream(fe);

                        prop.setProperty(key, MissingParameter);
                        prop.store(outputStream, "Some parameters has been auto generated by mod.");


                    }else if(returnString.equals(MissingParameter) || returnString.isEmpty()){
                        returnString = emptyReturnString;
                    }

                }

            }catch(Exception e){
                e.printStackTrace();
            }


        }

        if(returnString != null && !returnString.isEmpty()){
            InfoStorage.put(stack.getUnlocalizedName(), returnString);
        }


    }

    //Missing properties keys are listed in ../out/production/<ModName>/assets/<ModId>/<GuideFolder....>/<guideFile>
    public String GetInfoForStack(Object r){
        ItemStack stack = StackUtils.GetObject(r);

        for(Map.Entry<String,String> et : InfoStorage.entrySet()){
            if(et.getKey().equals(stack.getUnlocalizedName())){
                return et.getValue();
            }
        }

        return "No file found!";
    }
}
